// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using stockportfolio.Persistence;
using System;

namespace stockportfolio.Migrations
{
    [DbContext(typeof(StockportfolioDbContext))]
    [Migration("20180228145006_IntialModel")]
    partial class IntialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("stockportfolio.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Currency");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.Property<int>("StockExchangeID");

                    b.Property<string>("Symbol");

                    b.HasKey("Id");

                    b.HasIndex("StockExchangeID");

                    b.ToTable("Stock");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Stock");
                });

            modelBuilder.Entity("stockportfolio.Models.StockExchange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Symbol");

                    b.HasKey("Id");

                    b.ToTable("StockExchange");
                });

            modelBuilder.Entity("stockportfolio.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("stockportfolio.Models.UserStock", b =>
                {
                    b.HasBaseType("stockportfolio.Models.Stock");

                    b.Property<int>("Amount");

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<double>("PurchasePrice");

                    b.Property<int>("UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserStock");

                    b.HasDiscriminator().HasValue("UserStock");
                });

            modelBuilder.Entity("stockportfolio.Models.Stock", b =>
                {
                    b.HasOne("stockportfolio.Models.StockExchange", "StockExchange")
                        .WithMany("Stocks")
                        .HasForeignKey("StockExchangeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("stockportfolio.Models.UserStock", b =>
                {
                    b.HasOne("stockportfolio.Models.User", "User")
                        .WithMany("UserStocks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
